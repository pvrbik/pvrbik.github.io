####Question 3###
####PAUL VRBIK###
####301056796 ###
> 
> SplitDD:=proc(inA,n,p) local m,a,myFactors,v,g:
>     
>     a:=inA:
>     
>     if (degree(a,x)<=n) then
>         return {a}:
>     end if:
>     
>     m:=degree(a,x)/n:
>     myFactors:={a}:
>     
>     while nops(myFactors)<m do
>         v:=Randpoly(2*n-1,x) mod p:
>         
>         g:=Gcd(Powmod(v,(p-1)/2,a,x) mod p -1,a) mod p:
>         
>         if (g<>1) and (g<>a) then
>             Rem(a,g,x,'q') mod p:
>             myFactors:=SplitDD(g,n,p) union SplitDD(q,n,p):
>         end if:
>         
>     end do:
>     
>     return myFactors:
>     
> end proc:
> 
> f:=12*x^6-12*x^5-26*x^4+15*x^3-6*x^2+27*x-28;
                      6       5       4       3      2
             f := 12 x  - 12 x  - 26 x  + 15 x  - 6 x  + 27 x - 28

> a:=f;
                      6       5       4       3      2
             a := 12 x  - 12 x  - 26 x  + 15 x  - 6 x  + 27 x - 28

> 
###p=11###
> p:=11;
                                    p := 11

> 
> Factor(a) mod p;
                   2                      2
                 (x  + 4 x + 7) (x + 7) (x  + 6 x + 3) (x + 4)

> 
> w:=x;
                                     w := x

> w:=Powmod(w,p,a,x) mod p;
                                  5      4      2
                          w := 4 x  + 4 x  + 8 x  + 3

> g[1]:=Gcd(w-x,a) mod p;
                                          2
                                 g[1] := x  + 6

> a:=Quo(a,g[1],x,'rr') mod  p; 
                              4       3    2
                        a := x  + 10 x  + x  + 10 x + 10

> 
> w:=Powmod(w,p,a,x) mod p;
                                     w := x

> g[2]:=Gcd(w-x,a) mod p;
                               4       3    2
                      g[2] := x  + 10 x  + x  + 10 x + 10

> a:=Quo(a,g[2],x,'rr') mod  p; 
                                     a := 1

> 
> d1:=SplitDD(g[1],1,p);
                              d1 := {x + 4, x + 7}

> d2:=SplitDD(g[2],2,p);
                               2             2
                       d2 := {x  + 4 x + 7, x  + 6 x + 3}

> 
#Factorization is:
> d1 union d2;
                                   2             2
                   {x + 4, x + 7, x  + 4 x + 7, x  + 6 x + 3}

> 
###p=13###
> a:=f;
                      6       5       4       3      2
             a := 12 x  - 12 x  - 26 x  + 15 x  - 6 x  + 27 x - 28

> 
> p:=13;
                                    p := 13

> 
> Factor(a) mod p;
                        3                       2
                   12 (x  + 7 x + 10) (x + 1) (x  + 11 x + 8)

> 
> w:=x;
                                     w := x

> w:=Powmod(w,p,a,x) mod p;
                              5      4      3      2
                     w := 12 x  + 7 x  + 2 x  + 3 x  + 10 x

> g[1]:=Gcd(w-x,a) mod p;
                                 g[1] := x + 1

> a:=Quo(a,g[1],x,'rr') mod  p; 
                           5      4       3      2
                  a := 12 x  + 2 x  + 11 x  + 4 x  + 3 x + 11

> 
> w:=Powmod(w,p,a,x) mod p;
                               4      3      2
                      w := 10 x  + 5 x  + 2 x  + 10 x + 10

> g[2]:=Gcd(w-x,a) mod p;
                                      2
                             g[2] := x  + 11 x + 8

> a:=Quo(a,g[2],x,'rr') mod  p; 
                                       3
                              a := 12 x  + 6 x + 3

> 
> w:=Powmod(w,p,a,x) mod p;
                                     w := x

> g[3]:=Gcd(w-x,a) mod p;
                                      3
                             g[3] := x  + 7 x + 10

> a:=Quo(a,g[3],x,'rr') mod  p; 
                                    a := 12

> 
#Since these are alread the appropriate degrees the factorization is given by
> {a,g[1],g[2],g[3]};
                                3              2
                   {12, x + 1, x  + 7 x + 10, x  + 11 x + 8}

> 
###HENSEL LIFTING###
> read "hensel.mpl";
> Expand(f - a*g[3]*g[2]*g[1]) mod p;
                                       0

> Gcd(g[3]*g[2],g[1]) mod p;
                                       1

> UHLA(f,p,g[3],g[2]*g[1],a);
                        3               3      2
                     3 x  - 5 x + 4, 4 x  - 4 x  - 2 x - 7
